// File: /src/components/XPSystem/LevelUpSnackbar.js
import React from 'react';
import Snackbar from '@mui/material/Snackbar';
import Slide from '@mui/material/Slide';
import { Box, Typography } from '@mui/material';
import EmojiEventsIcon from '@mui/icons-material/EmojiEvents';
import PropTypes from 'prop-types'; // Import PropTypes

function SlideTransition(props) {
Â  return <Slide {...props} direction="down" />;
}

const LevelUpSnackbar = ({ open, setOpen, levelUpLevel }) => {
Â  const handleCloseSnackbar = () => {
Â  Â  setOpen(false);
Â  };

Â  if (!open) return null; // Se nÃ£o estiver aberto, nÃ£o renderiza nada

Â  return (
Â  Â  <Snackbar
Â  Â  Â  open={open}
Â  Â  Â  autoHideDuration={3000} // 3 segundos
Â  Â  Â  onClose={handleCloseSnackbar}
Â  Â  Â  TransitionComponent={SlideTransition}
Â  Â  Â  anchorOrigin={{ vertical: 'top', horizontal: 'center' }}
Â  Â  Â  sx={{ mt: { xs: '70px', md: '90px' } }} // Ajuste para evitar sobreposiÃ§Ã£o com header fixo (se existir)
Â  Â  >
Â  Â  Â  <Box
Â  Â  Â  Â  bgcolor="secondary.main"
Â  Â  Â  Â  color="white"
Â  Â  Â  Â  p={2}
Â  Â  Â  Â  borderRadius={1}
Â  Â  Â  Â  display="flex"
Â  Â  Â  Â  alignItems="center"
Â  Â  Â  >
Â  Â  Â  Â  <EmojiEventsIcon sx={{ mr: 1, color: 'white', fontSize: 30 }} />
Â  Â  Â  Â  <Typography variant="h6">
Â  Â  Â  Â  Â  NÃ­vel Up! AlcanÃ§ou o nÃ­vel {levelUpLevel} ðŸŽ‰
Â  Â  Â  Â  </Typography>
Â  Â  Â  </Box>
Â  Â  </Snackbar>
Â  );
};

LevelUpSnackbar.propTypes = {
Â  open: PropTypes.bool.isRequired,
Â  setOpen: PropTypes.func.isRequired,
Â  levelUpLevel: PropTypes.number,
};

export default LevelUpSnackbar;